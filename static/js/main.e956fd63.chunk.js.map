{"version":3,"sources":["Components/ContactsList/Contact.module.css","redux/action.js","redux/reducer.js","redux/store.js","Components/Form/Form.js","Components/Filter/Filter.js","Components/ContactsList/ContactListItem.js","Components/ContactsList/ContactsList.js","Components/App/App.js","index.js","Components/Form/Form.module.css"],"names":["module","exports","addContacts","createAction","addFilter","deleteContact","contacts","createReducer","action","state","payload","filter","contact","id","_","combineReducers","persistConfig","key","storage","middleware","getDefaultMiddleware","rootReducer","contactReducer","persistedReducer","persistReducer","store","configureStore","reducer","devTools","process","persistor","persistStore","connect","dispatch","onAddContacts","actions","useState","name","setName","number","setNumber","handleChangeInput","event","target","value","className","styles","form","onSubmit","e","preventDefault","uuidv4","newContact","inContact","find","toLowerCase","alert","item","input","type","pattern","title","required","onChange","button","changeFilter","query","ContactListItem","onClickRemove","items","onClick","onRemoveContact","filterContact","includes","length","map","App","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.e956fd63.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"items\":\"Contact_items__1zDBO\",\"item\":\"Contact_item__1QtZX\"};","import { createAction } from \"@reduxjs/toolkit\";\n\nconst addContacts = createAction(\"addContacts\");\nconst addFilter = createAction(\"addFilter\");\nconst deleteContact = createAction(\"deleteContact\");\n\nexport default { addContacts, addFilter, deleteContact };\n\n// export const addContacts = (contact) => {\n//   return {\n//     type: \"addContacts\",\n//     payload: contact,\n//   };\n// };\n\n// export const addFilter = (query) => {\n//   return {\n//     type: \"addFilter\",\n//     payload: query,\n//   };\n// };\n\n// export const deleteContact = (id) => {\n//   return {\n//     type: \"deleteContact\",\n//     payload: id,\n//   };\n// };\n","import { createReducer } from \"@reduxjs/toolkit\";\nimport { combineReducers } from \"redux\";\nimport action from \"./action\";\n\nconst contacts = createReducer([], {\n  [action.addContacts]: (state, { payload }) => [payload, ...state],\n  [action.deleteContact]: (state, { payload }) => [\n    ...state.filter((contact) => contact.id !== payload),\n  ],\n});\n\nconst filter = createReducer(\"\", {\n  [action.addFilter]: (_, { payload }) => payload,\n});\n\n// const contacts = (state = [], { type, payload }) => {\n//   switch (type) {\n//     case \"addContacts\":\n//       return [payload, ...state];\n//     case \"deleteContact\":\n//       return [...state.filter((contact) => contact.id !== payload)];\n\n//     default:\n//       return state;\n//   }\n// };\n\n// const filter = (state = \"\", { type, payload }) => {\n//   switch (type) {\n//     case \"addFilter\":\n//       return payload;\n//     default:\n//       return state;\n//   }\n// };\n\nexport default combineReducers({\n  contacts,\n  filter,\n});\n","import {\n  configureStore,\n  getDefaultMiddleware,\n  combineReducers,\n} from \"@reduxjs/toolkit\";\nimport contactReducer from \"./reducer\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\n\nconst persistConfig = {\n  key: \"contacts\",\n  storage,\n};\n\nconst middleware = [...getDefaultMiddleware()];\n\nconst rootReducer = combineReducers({\n  contacts: contactReducer,\n});\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst store = configureStore({\n  reducer: persistedReducer,\n  middleware,\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\nconst persistor = persistStore(store);\n\nexport default { store, persistor };\n","import { useState } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport actions from \"../../redux/action\";\n\nimport PropTypes from \"prop-types\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nimport styles from \"./Form.module.css\";\n\nconst Form = ({ contacts, filter, onAddContacts }) => {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n  const handleChangeInput = (event) => {\n    const { name, value } = event.target;\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n      case \"number\":\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const resetInput = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  const handleAddContact = (e) => {\n    e.preventDefault();\n    const id = uuidv4();\n    const newContact = { name, number, id };\n    const inContact = contacts.find(\n      (contact) => contact.name.toLowerCase() === newContact.name.toLowerCase()\n    );\n    if (inContact) {\n      alert(`${inContact.name}  is already in contacts!`);\n      return;\n    }\n    onAddContacts(newContact);\n    resetInput();\n  };\n\n  return (\n    <form className={styles.form} onSubmit={handleAddContact}>\n      <label className={styles.item}>\n        <p>name</p>\n        <input\n          className={styles.input}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          onChange={handleChangeInput}\n        />\n        <p>Number</p>\n        <input\n          className={styles.input}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          onChange={handleChangeInput}\n        />\n        <button className={styles.button} type=\"submit\">\n          Add contact\n        </button>\n      </label>\n    </form>\n  );\n};\n\nForm.propTypes = {\n  onAddContacts: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => {\n  const { contacts, filter } = state.contacts;\n  return {\n    contacts: contacts,\n    filter: filter,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onAddContacts: (contact) => dispatch(actions.addContacts(contact)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport actions from \"../../redux/action\";\n\nimport PropTypes from \"prop-types\";\nimport styles from \"../Form/Form.module.css\";\n\nconst Filter = ({ filter, changeFilter }) => {\n  return (\n    <>\n      <p>Find contacts by name</p>\n      <input\n        className={styles.input}\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={changeFilter}\n      />\n    </>\n  );\n};\n\nFilter.propTypes = {\n  // value: PropTypes.string.isRequired,\n  changeFilter: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    filter: state.filter,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    changeFilter: (query) => dispatch(actions.addFilter(query.target.value)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport styles from \"./Contact.module.css\";\n\nconst ContactListItem = ({ name, number, onClickRemove }) => (\n  <li className={styles.items}>\n    <p className={styles.item}>{name}:</p>\n    <p className={styles.item}>{number}</p>\n    <button onClick={onClickRemove}>Delete</button>\n  </li>\n);\n\nContactListItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onClickRemove: PropTypes.func.isRequired,\n};\n\nexport default ContactListItem;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport actions from \"../../redux/action\";\n\nimport ContactListItem from \"./ContactListItem\";\n\nimport PropTypes from \"prop-types\";\n\nconst ContactsList = ({ contacts, filter, onRemoveContact }) => {\n  const filterContact = contacts.filter((contact) =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n  return (\n    contacts.length > 0 && (\n      <ul>\n        {filterContact.map(({ id, name, number }) => (\n          <ContactListItem\n            key={id}\n            name={name}\n            number={number}\n            onClickRemove={() => onRemoveContact(id)}\n          />\n        ))}\n      </ul>\n    )\n  );\n};\n\nContactsList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nconst mapStateToProps = (state) => {\n  const { contacts, filter } = state.contacts;\n  return {\n    contacts: contacts,\n    filter: filter,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onRemoveContact: (id) => dispatch(actions.deleteContact(id)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsList);\n","import React from \"react\";\nimport Form from \"../Form\";\nimport Filter from \"../Filter\";\nimport ContactsList from \"../ContactsList\";\n\nconst App = () => {\n  // useEffect(() => {\n  //   const storage = JSON.parse(localStorage.getItem(\"data\"));\n  //   setContacts(storage);\n  // }, []);\n\n  // useEffect(() => {\n  //   localStorage.setItem(\"data\", JSON.stringify(contacts));\n  // }, [contacts]);\n\n  return (\n    <>\n      <h2>Phonebook</h2>\n      <Form />\n\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactsList />\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n// import { BrowserRoute } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport \"./index.css\";\nimport store from \"./redux/store\";\nimport App from \"./Components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        {/* <BrowserRoute> */}\n        <App />\n        {/* </BrowserRoute> */}\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__1shat\",\"item\":\"Form_item__2cJMM\",\"button\":\"Form_button__2Y0AD\",\"input\":\"Form_input__Y8k-g\"};"],"sourceRoot":""}